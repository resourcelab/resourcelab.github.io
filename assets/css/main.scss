---
# Add a comment to make this file sass-y.
# Change this file for any custom CSS.
---

/* We need to add display:inline in order to align the '>>' of the 'read more' link */
.post-excerpt p {
	display:inline;
}

// Import partials from `sass_dir` (defaults to `_sass`)
@import
	"syntax"
;

@import url('https://fonts.googleapis.com/css?family=Lato:300,400,700');

@import url('https://fonts.googleapis.com/css?family=Montserrat:500');



.abcontainer {
	position: relative;
	max-width: 1000px;
	margin: 0 auto;
	padding: 0 20px 20px;
}

.abheading {
	font-family: "Montserrat", Arial, sans-serif;
	font-size: 40px;
	font-weight: 500;
	line-height: 1.5;
	text-align: center;
	padding: 35px 0;
	color: #1a1a1a;
}

.abheading span {
	display: block;
}

.abgallery {
	display: flex;
	flex-wrap: wrap;
	/* Compensate for excess margin on outer gallery flex items */
	margin: -10px -10px;
}

.abgallery-item {
	/* Minimum width of 24rem and grow to fit available space */
	flex: 1 0 240px;
	position: relative;
	/* Margin value should be half of grid-gap value as margins on flex items don't collapse */
	margin: 20px;
	box-shadow: 3px 4px 4px rgba(0, 0, 0, 0.4);
	overflow: hidden;
}

.abgallery-image {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
	transition: transform 400ms ease-out;
}

.abgallery-image:hover {
	transform: scale(1.05);
}

.aptext-block {
  position: absolute;
  bottom: 20px;
	margin-left: auto;
	margin-right: auto;
	left: 0;
	right: 0;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
	padding-top: 5px;
	text-align: center;
}



/*

The following rule will only run if your browser supports CSS grid.

Remove or comment-out the code block below to see how the browser will fall-back to flexbox styling.

*/

@supports (display: grid) {
	.gallery {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
		grid-gap: 20px;
	}

	.gallery,
	.gallery-item {
		margin: 0;
	}
}
